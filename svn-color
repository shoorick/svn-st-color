#!/usr/bin/perl

=USAGE

    svn-color [commands and arguments]

=head1 SEE ALSO

L<http://svnbook.red-bean.com/>

=cut

use FindBin;
use Term::ANSIColor;
use YAML::Tiny;

use constant SVN => `which svn` // 'svn'; # Subversion executable

$|=1;
my    $command = join ' ', SVN =~ s/\s+$//r, @ARGV;
my $subcommand = shift;

# Show result as is if terminal doesn't support colors
print `$command`
    and exit
    if $ENV{'TERM'} !~ /color/;

my $config = YAML::Tiny->read( "$FindBin::Bin/config.yml" )->[0]
    or die "Cannot read configuration: $!";

# constant cannot be used below as key of hash
my $schema = $config->{'schema'} // 'default'; # TODO change color schema


foreach ( keys %{ $config->{'subcommands'} } ) {
    # exact matching
    last if $subcommand eq $_;

    next
        unless $config->{'subcommands'}->{$_}->{'aliases'};

    my $pattern = '^' . $config->{'subcommands'}->{$_}->{'aliases'} . '$';

    # replace with canonical name
    $subcommand = $_
    and last
        if $subcommand =~ /$pattern/;
}

my $rules = $config->{'subcommands'}->{$subcommand}->{'rules'};

foreach my $line ( `$command` ) {
    my $color;

    RULES:
    while ( my ( $name, $pattern ) = each %$rules ) {
        if ( $line =~ /$pattern/ ) {
            $color = $config->{'colors'}->{$schema}->{$subcommand}->{$name}
                if exists $config->{'colors'}->{$schema}->{$subcommand};
            last RULES;
        }
    }

    print $line
    and next
        unless $color;

    chomp $line;
    print colored($line, $color), "\n";
} # foreach row in command output
